# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'                 
    AppBundle\DataFixtures\:
        resource: '../../src/AppBundle/DataFixtures'
        tags: ['doctrine.fixture.orm']
        
    user_service:
        class:                         AppBundle\Services\UserService
        public: true
        arguments: ['@fos_user.user_manager', '@response_view_service']  
    
    response_view_service:
        class:                         AppBundle\Services\ResponseViewService
        public: true
        arguments: []    
    
    car_service:
        class:                         AppBundle\Services\CarService
        public: true
        arguments: ['@car_list_service', '@location_list_service', '@database_connection', '@response_view_service']    
    
    car_list_service:
        class:                         AppBundle\Services\CarListService
        public: true
        arguments: ['@request_handler', '%car_list_path%']
    
    location_list_service:
        class:                         AppBundle\Services\LocationListService
        public: true
        arguments: ['@request_handler', '%location_list_path%']        
    
    request_handler:
        class:                         AppBundle\Services\RequestHandlerService
        public: true
        arguments: [] 
    
    database_connection:
        class:                         AppBundle\Services\DatabaseConnectionService
        public: true
        arguments: ['@doctrine.orm.entity_manager']       
                
    authentication_response:
        class: AppBundle\EventListener\AuthenticationListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_failure, method: onAuthenticationFailureResponse }
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_not_found, method: onAuthenticationNotFoundResponse }
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_expired, method: onAuthenticationExpiredResponse } 
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_invalid, method: onAuthenticationJwtInvalidResponse } 
            
            
    
  
                   